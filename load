void load() { // 파일 로드
	FILE *sf = NULL;
	if (!fopen("sokoban", "r")) { // sokoban(save file)이 존재하는지 확인
		com_cur();
		printf("Save File doesn't exist."); // 오류 메세지 출력
	}
	else {
		sf = fopen("sokoban", "r"); // sokoban 파일이 존재할시 읽기 형식으로 오픈
		fscanf(sf, "%s %d %d %d %d\n", &name, &dif, &m_n, &cnt_u, &k_mv); // sokoban 파일의 첫줄에서 이름, 시간, 맵넘버, 언도횟수, 키보드 이동횟수 저장
		m_n++;
		for (int i = 0; i < k_mv; i++) 
			fscanf(sf, "%c", &b_key[i]); // undo를 위한 키보드 백업값 저장
		fscanf(sf, "\n"); // 개행을 따로 받음으로써 처리
		for (int i = 0; i < 30; i++)
			for (int j = 0; j < 30; j++) { // 맵 파일과 맵 원본파일 배열 비움
				empty[i][j] = '\0';
				for (int k = 0; k < 6; k++)
					map_f[i][j][k] = '\0'; // \0 = 존재하지않는 공간, NULL
			}
		char c; // 파일 스캔후 입력 받을 변수 지정
		int i = 0, j = 0, k = 0;
		while (1) {
			fscanf(sf, "%c", &c); // 한글자 씩 입력
			if (i == 0 && j == 0 && k == 0) { // 맵파일 배열 첫글자에 개행문자를 입력 받고 오류 해결
				map_f[i][j][k] = '\n';
				j++;
				continue; // 반복문으로 처음으로 반환
			}
			if (c == 'U') { // 맵파일을 언도를 기준으로 나누었기 때문에 U에따른 조건문 입력
				if (k == 0)  
					com_y = j + 3; // k가 0, 맵이 현재 파일일 경우 U위치가 마지막줄을 나타내기 때문에 커맨드의 y좌표 저장
				i = 0; // x축 좌표 초기화
				j = 0; // y축 좌표 초기화
				k++; // 맵 파일 배열의 3번째 크기(0 : 현재, 1 ~ 5 : undo)를 1 증가
				if (k == k_mv + 1 || k == 6) // 키보드 이동횟수를 기준으로 반복문 종료, 키보드 이동이 언도 가능 횟수를 넘을시 6에서 종료
					break;
				continue; // U가 나올시 반복문
			}
			if (c == '\0') // 널문자는 읽지 않음
				continue;
			map_f[i][j][k] = c; // 맵파일에 저장
			if (k == 0) {
				if (c == '@') { // 플레이어 위치 좌표 저장
					p_x = i;
					p_y = j;
				}
			}
			if (c == '\n') { // 개행시 y 좌표 증가, x 좌표 초기화
				j++;
				i = 0;
			}
			else // x 좌표 증가
				i++;
		}
		i = 0;
		j = 0; // x 좌표 y 좌표 초기화
		box = 0; // 박스 갯수 초기화
		rm_pl = 0; // 박스 공간 갯수 초기화
		while (1) { // 맵 원본 파일의 스캔
			fscanf(sf, "%c", &c); 
			if (c == 'S') // 끝지점인 S의 경우 반복문 탈출
				break;
			if (c == '\0') // 널문자는 읽지 않음
				continue; 
			empty[i][j] = c; // 원본 파일 저장
			if (c == '$') // 박스 갯수
				box++;
			if (c == 'O') // 박스 공간 갯수 
				rm_pl++;
			if (c == '\n') { // 개행시 y 좌표 증가
				j++;
				i = 0;
			}
			else // x 좌표 증가
				i++;
		}
		system("clear");
		mv_cur(0, 0);
		printf("\n      Hello %s\n\n", name);
		for (int a = 1; a < 30; a++) // 로드 후 맵 파일 출력
			for (int b = 0; b < 30; b++)
				printf("%c", map_f[b][a][0]);
		printf("(Command) ");
		fclose(sf);
	}
}
